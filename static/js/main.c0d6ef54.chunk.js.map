{"version":3,"sources":["moon.png","App.js","reportWebVitals.js","index.js"],"names":["App","useState","preState","setPreState","curState","setCurState","input","setInput","operator","setOperator","total","setTotal","useEffect","document","title","inputNum","e","includes","target","innerText","pre","operatorType","equals","cal","String","parseFloat","className","value","displayType","thousandSeparator","onClick","charAt","substring","body","classList","toggle","src","logo","alt","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c0d6ef54.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/moon.36b47146.png\";","import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport logo from './moon.png'\r\n\r\n\r\nfunction App() {\r\n  const [preState, setPreState] = useState(\"\");\r\n  const [curState, setCurState] = useState(\"\");\r\n  const [input, setInput] = useState(\"0\");\r\n  const [operator, setOperator] = useState(null);\r\n  const [total, setTotal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Calculator\";\r\n }, []);\r\n\r\n  const inputNum = (e) => {\r\n    if (curState.includes(\".\") && e.target.innerText === \".\") return;\r\n\r\n    if (total) {\r\n      setPreState(\"\");\r\n    }\r\n\r\n    curState\r\n      ? setCurState((pre) => pre + e.target.innerText)\r\n      : setCurState(e.target.innerText);\r\n    setTotal(false);\r\n  };\r\n\r\n const darkMode =()=>{\r\n  document.body.classList.toggle('dark')\r\n }\r\n\r\n  useEffect(() => {\r\n    setInput(curState);\r\n  }, [curState]);\r\n\r\n  useEffect(() => {\r\n    setInput(\"0\");\r\n  }, []);\r\n  const operatorType = (e) => {\r\n    setTotal(false);\r\n    setOperator(e.target.innerText);\r\n    if (curState === \"\") return;\r\n    if (preState !== \"\") {\r\n      equals();\r\n    } else {\r\n      setPreState(curState);\r\n      setCurState(\"\");\r\n    }\r\n  };\r\n\r\n  const equals = (e) => {\r\n    if (e?.target.innerText === \"=\") {\r\n      setTotal(true);\r\n    }\r\n    let cal;\r\n    switch (operator) {\r\n      case \"/\":\r\n        cal = String(parseFloat(preState) / parseFloat(curState));\r\n        break;\r\n\r\n      case \"+\":\r\n        cal = String(parseFloat(preState) + parseFloat(curState));\r\n        break;\r\n      case \"X\":\r\n        cal = String(parseFloat(preState) * parseFloat(curState));\r\n        break;\r\n      case \"-\":\r\n        cal = String(parseFloat(preState) - parseFloat(curState));\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    setInput(\"\");\r\n    setPreState(cal);\r\n    setCurState(\"\");\r\n  };\r\n\r\n  const minusPlus = () => {\r\n    if (curState.charAt(0) === \"-\") {\r\n      setCurState(curState.substring(1));\r\n    } else {\r\n      setCurState(\"-\" + curState);\r\n    }\r\n  };\r\n\r\n  const percent = () => {\r\n    preState\r\n      ? setCurState(String((parseFloat(curState) / 100) * preState))\r\n      : setCurState(String(parseFloat(curState) / 100));\r\n  };\r\n\r\n  const reset = () => {\r\n    setPreState(\"\");\r\n    setCurState(\"\");\r\n    setInput(\"0\");\r\n  };\r\n  return (\r\n    <div className='container'>\r\n      <div className='wrapper'>\r\n        <div className='screen'>\r\n          {input !== \"\" || input === \"0\" ? (\r\n            <NumberFormat\r\n              value={input}\r\n              displayType={\"text\"}\r\n              thousandSeparator={true}\r\n            />\r\n          ) : (\r\n            <NumberFormat\r\n              value={preState}\r\n              displayType={\"text\"}\r\n              thousandSeparator={true}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className='btn gray' onClick={reset}>\r\n          AC\r\n        </div>\r\n        <div className='btn gray' onClick={minusPlus}>\r\n          +/-\r\n        </div>\r\n        <div className='btn gray' onClick={percent}>\r\n          %\r\n        </div>\r\n        \r\n        <div className='btn operator' onClick={operatorType}>\r\n          /\r\n        </div>\r\n        <div className='btn' onClick={inputNum}>\r\n          7\r\n        </div>\r\n        <div className='btn' onClick={inputNum}>\r\n          8\r\n        </div>\r\n        <div className='btn' onClick={inputNum}>\r\n          9\r\n        </div>\r\n        <div className='btn operator' onClick={operatorType}>\r\n          X\r\n        </div>\r\n        <div className='btn' onClick={inputNum}>\r\n          4\r\n        </div>\r\n        <div className='btn' onClick={inputNum}>\r\n          5\r\n        </div>\r\n        <div className='btn' onClick={inputNum}>\r\n          6\r\n        </div>\r\n        <div className='btn operator' onClick={operatorType}>\r\n          +\r\n        </div>\r\n        <div className='btn' onClick={inputNum}>\r\n          1\r\n        </div>\r\n        <div className='btn' onClick={inputNum}>\r\n          2\r\n        </div>\r\n        <div className='btn' onClick={inputNum}>\r\n          3\r\n        </div>\r\n        <div className='btn operator' onClick={operatorType}>\r\n          -\r\n        </div>\r\n        <div className='btn' onClick={darkMode}>\r\n        <img src={logo} alt=\"T\" width=\"42\" height=\"42\" ></img>\r\n        </div>\r\n        <div className='btn' onClick={inputNum}>\r\n          0\r\n        </div>\r\n        <div className='btn' onClick={inputNum}>\r\n          .\r\n        </div>\r\n        <div className='btn eval' onClick={equals}>\r\n          =\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}